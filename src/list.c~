#include <stdlib.h>
#include <stdio.h>

#include "../include/list.h"

//list constructor
threadList * listInit()
{
	threadList * newList = (threadList *)malloc(sizeof(threadList));

	newList->first = NULL;
	newList->last = NULL;
	newList->count = 0;

	return newList;
}

//insert a thread at the list
threadList* insert(threadList* list, tcb* thread)
{
	if(list->first == NULL)
	{
		list->first = thread;
		list->last = thread;
	}
	
	else
	{
		list->last->next = thread;
		list->last = thread;
	}

	list->count++;

	return list;
}

//remove a thread from the list
threadList* removeThread(threadList* list, int id)
{
	if(list->first->tid == id)
		list->first = list->first->next;

	else
	{
		tcb* pointer;
		tcb* previous;

		previous = list->first;
		pointer = list->first->next;

		while(pointer != NULL)
			if(pointer->tid == id)
			{
				previous->next = pointer->next;
				return list;
			}
			else
			{
				previous = pointer;
				pointer = pointer->next;
			}	
	}

	return list;
}

tcb* search(threadList* list, int id)
{
	tcb * temp;

	temp = list->first;
printf("search ");
	while(temp != NULL)
{
printf("%d ", temp->tid);
		if(temp->tid == id)
			return temp;
		else
			temp = temp->next;
}
	return NULL;
}
